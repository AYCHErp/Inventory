@using Frapid.ApplicationState.Cache
@model dynamic

@{
    ViewBag.Title = "Inventory";
    Layout = ViewBag.InventoryLayoutPath;
}
<style>
    .modal iframe {
        width: 100%;
        border: none;
        height: 700px;
    }
</style>
<script src="/Scripts/frapid/utilities/form.js"></script>
<div class="ui attached segment" style="min-height: 100%; padding: 3em;">
    <div class="">
        <div class="ui huge header">Inventory Transfer</div>
        <div class="ui divider"></div>
        <div class="ui stackable grid">
            <div class="twelve wide column">
                <div class="ui basic buttons">
                    <a id="AddNewButton" class="ui basic button" style="" href="/dashboard/inventory/tasks/inventory-transfers/new">
                        Add New
                    </a>
                    <div class="ui icon top left pointing dropdown basic button" id="ExportDropDown" tabindex="0">
                        <span>
                            Export
                        </span>
                        <div class="menu">
                            <div class="header">
                                Export This Document
                            </div>
                            <a class="item" href="javascript:void(0);" onclick="createDoc();">
                                <i class="file word outline blue icon"></i> Export to Doc
                            </a>
                            <a class="item" href="javascript:void(0);" onclick="createXls();">
                                <i class="file excel outline green icon"></i> Export to Excel
                            </a>
                            <a class="item" href="javascript:void(0);" onclick="createPDF();">
                                <i class="file pdf outline red icon"></i> Export to PDF
                            </a>
                        </div>
                    </div>
                    <a id="PrintButton" href="javascript:void(0);" onclick="print()" class="ui basic button">
                        Print
                    </a>
                </div>
            </div>
        </div>
        <div class="ui stackable form query segment" id="Annotation">
            <div class="twelve fields">
                <div class="field">
                    <input class="date" placeholder="DateFrom" id="FromInputDate" title="DateFrom" type="date">
                </div>
                <div class="field">
                    <input class="date" placeholder="DateTo" id="ToInputDate" title="DateTo" type="date">
                </div>
                <div class="field">
                    <input placeholder="TranId" id="TranIdInputText" title="TranId" type="text">
                </div>
                <div class="field">
                    <input placeholder="TranCode" id="TranCodeInputText" title="TranCode" type="text">
                </div>
                <div class="field">
                    <input placeholder="Office" id="OfficeInputText" title="Office" type="text">
                </div>
                <div class="field">
                    <input placeholder="ReferenceNumber" id="ReferenceNumberInputText" title="ReferenceNumber" type="text">
                </div>
                <div class="field">
                    <input placeholder="StatementReference" id="StatementReferenceInputText" title="StatementReference" type="text">
                </div>
                <div class="field">
                    <input placeholder="PostedBy" id="PostedByInputText" title="PostedBy" type="text">
                </div>
                <div class="field">
                    <div class="ui green button" id="ShowButton">Show</div>
                </div>
            </div>
        </div>
        <table id="TransferView" class="ui table segment">
            <thead>
                <tr>
                    <th>Actions</th>
                    <th>TranId</th>
                    <th>TranCode</th>
                    <th>Value Date</th>
                    <th>Book Date</th>
                    <th>Ref#</th>
                    <th>Statement Reference</th>
                    <th>Posted By</th>
                    <th>Office</th>
                    <th>Status</th>
                    <th>Verified By</th>
                    <th>Verified On</th>
                    <th>Reason</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>

    </div>
</div>
<div class="ui large advice modal">
    <i class="close icon"></i>
    <iframe></iframe>
</div>

<script>
    function displayTable(target, model) {
        target.find("tbody").html("");
        function getCell(text) {
            var cell = $("<td />");

            cell.text(text || "");

            return cell;
        };

        function getActionCell(tranId) {
            var cell = $("<td />");

            var checklistAnchor = $("<a title='Checklist Window'><i class='list icon'></i></a>");
            checklistAnchor.attr("href", "/dashboard/inventory/tasks/transfers/checklist/" + tranId);

            var inventoryAdviceAnchor = $("<a title='View Purchase Invoice'><i class='zoom icon'></i></a>");
            inventoryAdviceAnchor.attr("href", "javascript:void(0);");
            inventoryAdviceAnchor.attr("onclick", "showTransfer(" + tranId + ");");


            cell.append(checklistAnchor);
            cell.append(inventoryAdviceAnchor);
            return cell;
        };

        $.each(model, function () {
            var item = this;

            var row = $("<tr />");

            row.append(getActionCell(item.TransactionMasterId));
            row.append(getCell(item.TransactionMasterId));
            row.append(getCell(item.TransactionCode));
            row.append(getCell(item.ValueDate));
            row.append(getCell(item.BookDate));
            row.append(getCell(item.ReferenceNumber));
            row.append(getCell(item.StatementReference));
            row.append(getCell(item.PostedBy));
            row.append(getCell(item.Office));
            row.append(getCell(item.Status));
            row.append(getCell(item.VerifiedBy));
            row.append(getCell(item.VerifiedOn));
            row.append(getCell(item.Reason));

            target.find("tbody").append(row);
        });
    };
    function processQuery() {
        function getModel() {
            var model = window.serializeForm($("#Annotation"));
            model.Book = "Inventory Transfer";
            return model;
        };

        function displayGrid(target) {
            function request(model) {
                var url = "/dashboard/finance/tasks/journal/view";
                var data = JSON.stringify(model);
                return window.getAjaxRequest(url, "POST", data);
            };

            var model = getModel();


            var ajax = request(model);

            ajax.success(function (response) {
                displayTable(target, response);
                target.removeClass("loading");
            });

            ajax.fail(function (xhr) {
                alert(JSON.stringify(xhr));
            });
        };

        var view = $("#TransferView").addClass("loading");

        displayGrid(view);
    };

    $("#ShowButton").unbind("click").bind("click", function () {
        processQuery();
    });

    loadDatepicker();
    processQuery();


    function showTransfer(tranId) {
        $(".advice.modal iframe").attr("src", "/dashboard/reports/source/Areas/MixERP.Inventory/Reports/Transfer.xml?transaction_master_id=" + tranId);

        setTimeout(function () {
            $(".advice.modal")
                .modal('setting', 'transition', 'horizontal flip')
                .modal({
                    blurring: true
                })
                .modal("show");

        }, 300);
    };
</script>